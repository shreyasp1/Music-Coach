I am solving the problem of a musician not knowing exactly where he/she is flat or sharp according to a piece that they are practicing. To solve this problem. I take in the original file and then record the user's version of that piece. Then my program calculates the pitches of each of the files and compares these pitches to see if they match. Then it graphs the pitches of the two files and uses threading to play the recording at the same time so the user knows where they differed from the original recording.

My user interface consists on having a main page, a recording page, and a graph page. I split it up into 3 pages because this represents the three steps of uploading, recording, presenting. It is simple for the user to understand and follow along with the program's process. When I was researching programs that were similar to mine, one was an asian kareoke program. This program was linked with kareoke and showed the live input as the user went on. I thought that this would be good for kareoke but it wouldn't be ideal for my program since if a user is practicing a song, if the person is told while they are practicing that they are messing up, this would affect their performance of the rest of the piece, which they might've performed perfectly. That is why my program plays the user's recording while showing where they messed up after the user records his/her recording. That way the user knows exactly where he/she messed up and his/her mistake.